{"ast":null,"code":"// @ is an alias to /src\n//import HomeForm from '@/components/HomeForm.vue'\nimport { ref } from \"vue\";\nconst options1 = ref({});\nconst series1 = ref([]);\nconst options2 = ref({});\nconst series2 = ref([]);\nconst options3 = ref({});\nconst series3 = ref([]);\nexport default {\n  name: 'HomeView',\n  components: {\n    //HomeForm\n  },\n  methods: {\n    submitData() {\n      var fetch_status;\n      fetch('/api/submit', {\n        method: \"POST\",\n        // Set the headers\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        // Set the post data\n        body: JSON.stringify({\n          gender: document.querySelector('input[name=\"gender\"]:checked').value,\n          experience: document.querySelector('input[name=\"experience\"]').value,\n          language: document.querySelector('select[name=\"language\"]').value,\n          windows: document.querySelector('input[name=\"windows\"]').value,\n          linux: document.querySelector('input[name=\"linux\"]').value,\n          macos: document.querySelector('input[name=\"macos\"]').value\n        })\n      }).then(function (response) {\n        // Save the response status in a variable to use later.\n        fetch_status = response.status;\n        // Handle success\n        // eg. Convert the response to JSON and return\n        return response.json();\n      }).then(function (json) {\n        // Check if the response were success\n        if (fetch_status == 201) {\n          // Use the converted JSON\n          console.log(json);\n        }\n      }).catch(function (error) {\n        // Catch errors\n        console.log(error);\n      });\n    },\n    loadCharts() {\n      this.loadChartLanguage(false);\n      this.loadChartExperience(false);\n      this.loadChartFamiliarity(false);\n    },\n    async loadChartLanguage(update) {\n      var filter = document.querySelector('select[name=\"filter\"]').value;\n      var response1 = await fetch(\"/api/chart/language/\" + filter);\n      if (response1.ok) {\n        var language = await response1.json();\n        series1.value = language.map(a => a.count);\n        if (update != true) {\n          options1.value = {\n            labels: language.map(a => a._id),\n            title: {\n              text: \"Surveyed Users' Preferred Language\"\n            }\n          };\n        }\n      }\n    },\n    async loadChartExperience() {\n      var response2 = await fetch(\"/api/chart/experience/\");\n      if (response2.ok) {\n        var experience = await response2.json();\n        options2.value = {\n          series: [{\n            name: 'Experience',\n            data: experience.map(a => a.count)\n          }],\n          xaxis: {\n            title: {\n              text: 'Experience (years)'\n            },\n            categories: experience.map(a => (a._id * 5).toString() + \"-\" + (a._id * 5 + 4).toString())\n          },\n          yaxis: {\n            title: {\n              text: 'Number of users'\n            }\n          },\n          title: {\n            text: 'Experience of Surveyed Users',\n            align: 'center'\n          }\n        };\n      }\n    },\n    async loadChartFamiliarity() {\n      var response3 = await fetch(\"/api/chart/familiarity/\");\n      if (response3.ok) {\n        var familiarity = await response3.json();\n        options3.value = {\n          series: [{\n            name: 'Familiarity',\n            data: familiarity.map(a => a.count)\n          }],\n          xaxis: {\n            categories: familiarity.map(a => a._id)\n          },\n          title: {\n            text: 'Familiarity with Different Operating Systems',\n            align: 'center'\n          }\n        };\n      }\n    }\n  },\n  setup() {\n    return {\n      options1,\n      series1,\n      options2,\n      series2,\n      options3,\n      series3\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","options1","series1","options2","series2","options3","series3","name","components","methods","submitData","fetch_status","fetch","method","headers","body","JSON","stringify","gender","document","querySelector","value","experience","language","windows","linux","macos","then","response","status","json","console","log","catch","error","loadCharts","loadChartLanguage","loadChartExperience","loadChartFamiliarity","update","filter","response1","ok","map","a","count","labels","_id","title","text","response2","series","data","xaxis","categories","toString","yaxis","align","response3","familiarity","setup"],"sourceRoot":"","sources":["C:\\Users\\Thomas Tsoi\\OneDrive\\DAAI\\COMP7270 Web and Mobile Programming\\assign02-vue\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <h1 name=\"\">COMP7270 Web and Mobile Programming</h1>\n\n  <div class=\"container\">\n\n    <nav id=\"navbar-example2\" class=\"navbar navbar-light bg-light\">\n      <a class=\"navbar-brand\" href=\"#\">Programmer Survey Form</a>\n      <ul class=\"nav nav-pills\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#survey\">survey</a>\n        </li>\n        <li class=\"nav-item chart\">\n          <a class=\"nav-link\" href=\"#one\">one</a>\n        </li>\n        <li class=\"nav-item chart\">\n          <a class=\"nav-link\" href=\"#two\">two</a>\n        </li>\n        <li class=\"nav-item chart\">\n          <a class=\"nav-link\" href=\"#three\">three</a>\n        </li>\n      </ul>\n    </nav>\n    <div id=\"content\">\n\n\n      <div id=\"survey\" class=\"row justify-content-md-center section\">\n        <div class=\"col col-lg-8\">\n          <div class=\"card\">\n            <div class=\"card-header text-center\">\n              survey\n            </div>\n            <div class=\"card-body text-start\">\n\n              <fieldset class=\"form-group mb-3\">\n                <div class=\"row\">\n                  <legend class=\"col-form-label col-sm-3 pt-0\">Gender</legend>\n                  <div class=\"col-sm-9\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gridRadios1\" value=\"m\" checked>\n                      <label class=\"form-check-label\" for=\"gridRadios1\">Male</label>\n                    </div>\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gridRadios2\" value=\"f\">\n                      <label class=\"form-check-label\" for=\"gridRadios2\">Female</label>\n                    </div>\n                  </div>\n                </div>\n              </fieldset>\n              <div class=\"form-group row mb-3\">\n                <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Experience (years)</label>\n                <div class=\"col-sm-9\">\n                  <div class=\"input-group\">\n                    <input type=\"number\" class=\"form-control\" name=\"experience\" id=\"experience\" min=\"0\" max=\"100\" placeholder=\"1\" aria-describedby=\"basic-addon2\" required>\n                    <div class=\"input-group-append\">\n                      <div class=\"input-group-text\" id=\"basic-addon2\">year(s)</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group row mb-3\">\n                <div class=\"col-sm-3\">Preferred language</div>\n                <div class=\"col-sm-9\">\n                  <select class=\"form-control form-select\" name=\"language\" required>\n                    <option value=\"\" disabled selected>Select your preferred language</option>\n                    <option>C++</option>\n                    <option>Java</option>\n                    <option>JavaScript</option>\n                    <option>Objective C</option>\n                    <option>PHP</option>\n                    <option>Python</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div class=\"form-group row mb-3\">\n                <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Familiarity with Windows</label>\n                <div class=\"col-sm-9\">\n                  <div class=\"input-group row\">\n                    <div class=\"col-sm-3 text-end d-none d-sm-block\">Poor</div>\n                    <div class=\"col-sm-6\">\n                      <input type=\"range\" class=\"form-range\" min=\"0\" max=\"5\" id=\"windows\" name=\"windows\">\n                    </div>\n                    <div class=\"col-sm-3 text-start d-none d-sm-block\">Excellent</div>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"form-group row mb-3\">\n                <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Familiarity with Linux</label>\n                <div class=\"col-sm-9\">\n                  <div class=\"input-group row\">\n                    <div class=\"col-sm-3 text-end d-none d-sm-block\">Poor</div>\n                    <div class=\"col-sm-6\">\n                      <input type=\"range\" class=\"form-range\" min=\"0\" max=\"5\" id=\"windows\" name=\"linux\">\n                    </div>\n                    <div class=\"col-sm-3 text-start d-none d-sm-block\">Excellent</div>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"form-group row mb-3\">\n                <label for=\"inputEmail3\" class=\"col-sm-3 col-form-label\">Familiarity with MacOS</label>\n                <div class=\"col-sm-9\">\n                  <div class=\"input-group row\">\n                    <div class=\"col-sm-3 text-end d-none d-sm-block\">Poor</div>\n                    <div class=\"col-sm-6\">\n                      <input type=\"range\" class=\"form-range\" min=\"0\" max=\"5\" id=\"windows\" name=\"macos\">\n                    </div>\n                    <div class=\"col-sm-3 text-start d-none d-sm-block\">Excellent</div>\n                  </div>\n                </div>\n              </div>\n\n              <datalist id=\"tickmarks\">\n                <option value=\"0\"></option>\n                <option value=\"25\"></option>\n                <option value=\"50\"></option>\n                <option value=\"75\"></option>\n                <option value=\"100\"></option>\n              </datalist>\n\n              <div class=\"form-group row mb-3\">\n                <div class=\"col-sm-6 text-start\">\n                  <button class=\"btn btn-primary\" @click=\"submitData\">Submit Data & View Charts</button>\n                </div>\n                <div class=\"col-sm-6 text-end\">\n                  <button class=\"btn btn-secondary\" @click=\"loadCharts\">View Charts Only</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n\n      <div id=\"one\" class=\"row justify-content-md-center section\">\n        <div class=\"col col-lg-8\">\n          <div class=\"card\">\n            <div class=\"card-header text-center\">\n              chart one\n            </div>\n            <div class=\"card-body text-start\">\n              <select class=\"form-control form-select mb-3\" name=\"filter\" @change=\"loadChartLanguage(true)\">\n                <option value=\"a\">Both Genders</option>\n                <option value=\"m\">Male only</option>\n                <option value=\"f\">Female only</option>\n              </select>\n\n              <div>\n                  <apexchart width=\"500\" type=\"donut\" :options=\"options1\" :series=\"series1\"></apexchart>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div id=\"two\" class=\"row justify-content-md-center section\">\n        <div class=\"col col-lg-8\">\n          <div class=\"card\">\n            <div class=\"card-header text-center\">\n              chart two\n            </div>\n            <div class=\"card-body text-start\">\n              <div id=\"chart\">\n                <apexchart type=\"bar\" height=\"500\" :options=\"options2\" :series=\"series2\"></apexchart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"three\" class=\"row justify-content-md-center section\">\n        <div class=\"col col-lg-8\">\n          <div class=\"card\">\n            <div class=\"card-header text-center\">\n              chart three\n            </div>\n            <div class=\"card-body text-start\">\n              <div id=\"chart\">\n                <apexchart type=\"radar\" height=\"500\" :options=\"options3\" :series=\"series3\"></apexchart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n    </div>\n\n  </div>\n</template>\n\n\n<style>\nbody {\n  background-color:slategray;\n}\n\nnav.navbar {\n  position: sticky;\n  top: 0px;\n  padding: 10px 30px;\n  background-color:lightsteelblue !important;\n  border-top: 12px solid rgb(32,32,32);\n  color: rgb(32,32,32);\n  z-index: 100;\n}\n\n.navbar-brand {\n  text-transform:uppercase;\n}\n\nli.nav-item {\n  font-variant: small-caps;\n}\n\nh1 {\n  background: rgb(59,103,158);\n  background: -moz-linear-gradient(top,  rgba(59,103,158,1) 0%, rgba(43,136,217,1) 50%, rgba(32,124,202,1) 51%, rgba(125,185,232,1) 100%);\n  background: -webkit-linear-gradient(top,  rgba(59,103,158,1) 0%,rgba(43,136,217,1) 50%,rgba(32,124,202,1) 51%,rgba(125,185,232,1) 100%);\n  background: linear-gradient(to bottom,  rgba(59,103,158,1) 0%,rgba(43,136,217,1) 50%,rgba(32,124,202,1) 51%,rgba(125,185,232,1) 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3b679e', endColorstr='#7db9e8',GradientType=0 );\n\n  color: white;\n  padding: 20px;\n  font-weight: 700;\n  opacity: 0.8;\n  margin-bottom: 0;\n}\n\n#content {\n  background-color: white;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  padding: 30px;\n  margin-bottom: 20px;  \n  \n  min-height: 40rem;\n  padding-bottom: 120px;\n}\n\n.container {\n  padding: 0;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  box-shadow: 0px 0px 25px 0px rgba(0,0,0,0.35);\n  -webkit-box-shadow: 0px 0px 25px 0px rgba(0,0,0,0.35);\n  -moz-box-shadow: 0px 0px 25px 0px rgba(0,0,0,0.35);\n}\n\n.question {\n  min-height: 35rem;\n}\n\n.section {\n  padding-top: 80px;\n}\n\n.card-header {\n  font-variant: small-caps;\n}\n\n.card-body {\n  min-height: 15rem;\n}\n\n.chart {\n  /* display: none; */\n}\n\n.input-group-append .input-group-text {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n</style>\n\n\n\n\n<script>\n\n// @ is an alias to /src\n//import HomeForm from '@/components/HomeForm.vue'\nimport { ref } from \"vue\";\n\nconst options1 = ref({});\nconst series1 = ref([]);\nconst options2 = ref({});\nconst series2 = ref([]);\nconst options3 = ref({});\nconst series3 = ref([]);\n\nexport default {\n  name: 'HomeView',\n  components: {\n    //HomeForm\n  },\n  \n  methods: {\n     submitData () {\n      var fetch_status;\n\n      fetch('/api/submit', {\n          method: \"POST\",\n          // Set the headers\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n          },\n          // Set the post data\n          body: JSON.stringify({\n              gender : document.querySelector('input[name=\"gender\"]:checked').value,\n              experience : document.querySelector('input[name=\"experience\"]').value,\n              language : document.querySelector('select[name=\"language\"]').value,\n              windows : document.querySelector('input[name=\"windows\"]').value,\n              linux : document.querySelector('input[name=\"linux\"]').value,\n              macos : document.querySelector('input[name=\"macos\"]').value\n          })\n      })\n      .then(function (response) {\n          // Save the response status in a variable to use later.\n          fetch_status = response.status;\n          // Handle success\n          // eg. Convert the response to JSON and return\n          return response.json();\n      }) \n      .then(function (json) {\n          // Check if the response were success\n          if (fetch_status == 201) {\n              // Use the converted JSON\n              console.log(json);\n          }\n      })\n      .catch(function (error){\n          // Catch errors\n          console.log(error);\n      }); \n    },\n\n    loadCharts() {\n      this.loadChartLanguage(false);\n      this.loadChartExperience(false);\n      this.loadChartFamiliarity(false);\n    },\n\n    async loadChartLanguage(update) {\n      var filter = document.querySelector('select[name=\"filter\"]').value;\n      \n      var response1 = await fetch(\"/api/chart/language/\" + filter);\n\n      if (response1.ok) {\n        var language = await response1.json();\n        series1.value = language.map(a => a.count);\n\n        if (update != true) {\n          options1.value = { \n            labels: language.map(a => a._id),\n            title: {\n              text: \"Surveyed Users' Preferred Language\"\n            },\n          };\n        }\n      }\n    },\n\n    async loadChartExperience() {\n      var response2 = await fetch(\"/api/chart/experience/\");\n\n      if (response2.ok) {\n        var experience = await response2.json();\n        options2.value = { \n          series: [{\n            name: 'Experience',\n            data: experience.map(a => a.count)\n          }],\n          xaxis: {\n            title: {\n              text: 'Experience (years)'\n            },\n            categories: experience.map(a => (a._id*5).toString() +\"-\"+(a._id*5+4).toString())\n          },\n          yaxis: {\n            title: {\n              text: 'Number of users'\n            }\n          },\n          title: {\n              text: 'Experience of Surveyed Users',\n              align: 'center',\n          }\n        };\n      }\n    },\n\n\n    async loadChartFamiliarity() {\n      var response3 = await fetch(\"/api/chart/familiarity/\");\n\n      if (response3.ok) {\n        var familiarity = await response3.json();\n        options3.value = { \n          series: [{\n            name: 'Familiarity',\n            data: familiarity.map(a => a.count)\n          }],\n          xaxis: {\n            categories: familiarity.map(a => a._id)\n          },\n          title: {\n              text: 'Familiarity with Different Operating Systems',\n              align: 'center',\n          }\n        };\n      }\n    }\n\n\n  },\n\n\n\n  setup() {\n      return {\n        options1, series1, options2, series2, options3, series3\n      }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}